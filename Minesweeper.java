public class Minesweeper {
    public static void main(String[] args) {
        int m = Integer.parseInt(args[0]); //строка
        int n = Integer.parseInt(args[1]);  //столбец
        int k = Integer.parseInt(args[2]);  // колличество мин
        int[][] a = new int[m][n];          //поле изначально 0 мин
        int kk = 0;  //kk счетчик установленных мин сначало на поле 0 мин. надо сделать kk=k
        if ((m>1)&&(n>1)) {
            while (kk != k) {                       //точно k мин
                int ki = (int) (Math.random() * m); //генерируем координаты мины
                int kj = (int) (Math.random() * n); //генерируем координаты мины
                if (a[ki][kj] < 9) {                //если больше и равно 9 то в этом месте уже мина есть
                    kk = kk + 1;                    //считаем что установили мину
                    a[ki][kj] = 9;                  //отмечаем на будущее что мина в этом месте уже есть
                    //далее после установки мины необходимо прибавить на единицу вокруг мины
                    //описываем условие в центре и прибавляем вокруг по единице
                    if ((ki != 0) && (kj != 0) && (ki != m - 1) && (kj != n - 1)) {
                        a[ki - 1][kj] = a[ki - 1][kj] + 1;
                        a[ki - 1][kj - 1] = a[ki - 1][kj - 1] + 1;
                        a[ki - 1][kj + 1] = a[ki - 1][kj + 1] + 1;
                        a[ki][kj - 1] = a[ki][kj - 1] + 1;
                        a[ki][kj + 1] = a[ki][kj + 1] + 1;
                        a[ki + 1][kj] = a[ki + 1][kj] + 1;
                        a[ki + 1][kj - 1] = a[ki + 1][kj - 1] + 1;
                        a[ki + 1][kj + 1] = a[ki + 1][kj + 1] + 1;
                    }
                    //так же устанавливаем мины если мина попала на верхнюю строку но не в углы
                    if ((ki == 0) && (kj != 0) && (kj != n - 1)) {
                        a[1][kj] = a[1][kj] + 1;
                        a[1][kj - 1] = a[1][kj - 1] + 1;
                        a[1][kj + 1] = a[1][kj + 1] + 1;
                        a[0][kj - 1] = a[0][kj - 1] + 1;
                        a[0][kj + 1] = a[0][kj + 1] + 1;
                    }
                    //так же устанавливаем мины если мина попала на левый столбец но не в углы
                    if ((kj == 0) && (ki != 0) && (ki != m - 1)) {
                        a[ki - 1][1] = a[ki - 1][1] + 1;
                        a[ki + 1][1] = a[ki + 1][1] + 1;
                        a[ki][1] = a[ki][1] + 1;
                        a[ki - 1][0] = a[ki - 1][0] + 1;
                        a[ki + 1][0] = a[ki + 1][0] + 1;
                    }
                    //так же устанавливаем мины если мина попала на нижнюю строку но не в углы
                    if ((ki == m - 1) && (kj != 0) && (kj != n - 1)) {
                        a[m - 2][kj] = a[m - 2][kj] + 1;
                        a[m - 2][kj - 1] = a[m - 2][kj - 1] + 1;
                        a[m - 2][kj + 1] = a[m - 2][kj + 1] + 1;
                        a[m - 1][kj - 1] = a[m - 1][kj - 1] + 1;
                        a[m - 1][kj + 1] = a[m - 1][kj + 1] + 1;
                    }
                    //так же устанавливаем мины если мина попала на правый столбец но не в углы
                    if ((kj == n - 1) && (ki != 0) && (ki != m - 1)) {
                        a[ki - 1][n - 2] = a[ki - 1][n - 2] + 1;
                        a[ki + 1][n - 2] = a[ki + 1][n - 2] + 1;
                        a[ki][n - 2] = a[ki][n - 2] + 1;
                        a[ki - 1][n - 1] = a[ki - 1][n - 1] + 1;
                        a[ki + 1][n - 1] = a[ki + 1][n - 1] + 1;
                    }
                    //условие если мина попала на угол
                    if ((ki == 0) && (kj == 0)) {
                        a[0][1] = a[0][1] + 1;
                        a[1][1] = a[1][1] + 1;
                        a[1][0] = a[1][0] + 1;
                    }
                    //условие если мина попала на угол
                    if ((ki == 0) && (kj == n - 1)) {
                        a[0][n - 2] = a[0][n - 2] + 1;
                        a[1][n - 2] = a[1][n - 2] + 1;
                        a[1][n - 1] = a[1][n - 1] + 1;
                    }
                    //условие если мина попала на угол
                    if ((ki == m - 1) && (kj == 0)) {
                        a[m - 2][0] = a[m - 2][0] + 1;
                        a[m - 2][1] = a[m - 2][1] + 1;
                        a[m - 1][1] = a[m - 1][1] + 1;
                    }
                    //условие если мина попала на угол
                    if ((ki == m - 1) && (kj == n - 1)) {
                        a[m - 2][n - 1] = a[m - 2][n - 1] + 1;
                        a[m - 2][n - 2] = a[m - 2][n - 2] + 1;
                        a[m - 1][n - 2] = a[m - 1][n - 2] + 1;
                    }
                }
            }
        }
        //условие если поле в одну строку
        if (m==1) {
            while (kk != k) {
                int kj = (int) (Math.random() * n);
                if (a[0][kj] < 9) {
                    kk = kk + 1;
                    a[0][kj] = 9;
                    if ((kj != 0) && (kj != n - 1)) {
                        a[0][kj-1] = a[0][kj-1] + 1;
                        a[0][kj+1] = a[0][kj+1] + 1;
                    }
                    if (kj == 0) {
                        a[0][1] = a[0][1] + 1;
                    }
                    if (kj == n - 1) {
                        a[0][n-2] = a[0][n-2] + 1;
                    }
                }
            }
        }
        //условие если поле в один столбец
        if (n==1) {
            while (kk != k) {
                int ki = (int) (Math.random() * m);
                if (a[ki][0] < 9) {
                    kk = kk + 1;
                    a[ki][0] = 9;
                    if ((ki != 0) && (ki != m - 1)) {
                        a[ki-1][0] = a[ki-1][0] + 1;
                        a[ki+1][0] = a[ki+1][0] + 1;
                    }
                    if (ki == 0) {
                        a[1][0] = a[1][0] + 1;
                    }
                    if (ki == m - 1) {
                        a[m-2][0] = a[m-2][0] + 1;
                    }
                }
            }
        }
        //выводим поле
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (a[i][j]>8) {System.out.print("*  ");}
                if (a[i][j]<=8) {System.out.print(a[i][j]+ "  ");}
            }
            System.out.println();
        }
    }
}